# -*- coding: utf-8 -*-
"""안준영.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-j0qzKPNxUh_CI9U-TW-MeXQBEFadiBc
"""

import matplotlib as mpl
import pandas as pd
from google.colab import drive
import matplotlib.pyplot as plt
import seaborn as sns

drive.mount('/content/gdrive')

act = pd.read_csv('/content/gdrive/MyDrive/2_act_info.csv')
cus = pd.read_csv('/content/gdrive/MyDrive/2_cus_info.csv')
iem = pd.read_csv('/content/gdrive/MyDrive/2_iem_info.csv')
trd_kr = pd.read_csv('/content/gdrive/MyDrive/2_trd_kr.csv')
trd_oss = pd.read_csv('/content/gdrive/MyDrive/2_trd_oss.csv')
#data_schema_vf.xlsx

# Y세대 : 1980~2000년생 (21살~40살) / Z세대 2001년생~ (1살~20살)

trd_oss



x = pd.read_excel('/content/gdrive/MyDrive/data_schema_vf.xlsx')

x

cus['sex_dit_cd']



# 1남성 / 2여성
sex_counts = cus['sex_dit_cd'].value_counts()

explode = [0.05, 0.05]
#colors = ['#ff9999', '#ffc000', '#8fd9b6', '#d395d0']
colors = ['#ffc000', '#ff9999']


fig, ax = plt.subplots(1,2,figsize=(20,15))


ax[0].bar(['male', 'female'],[sex_counts[1], sex_counts[2]], color = colors)
ax[1].pie([sex_counts[1], sex_counts[2]], labels=['male', 'female'], autopct='%.1f%%', startangle=260, counterclock=False, explode=explode, shadow=True, colors=colors) #textprops={'fontsize': 25}


#plt.scatter(['male', 'female'], [sex_counts[1], sex_counts[2]], marker= 'o', s=400, color= 'red', alpha=0.5)
plt.rcParams.update({'font.size': 20})

plt.show()



p = cus['cus_age'].value_counts()
p.sort_index(inplace=True)

explode = [0.2, 0.15, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.15, 0.2, 0.25]
#colors = ['#ff9999', '#ffc000', '#8fd9b6', '#d395d0']
ages = ['≤19', '20~24', '25~29', '30~34', '35~39', '40~44', '45~49', '50~54', '55~59', '60~64', '65~69', '≤70']
colors = ['#a5d98f', '#8fd9b6', '#8fd9cf', '#8fc7d9', '#8fa0d9', '#a28fd9', '#b98fd9', '#c78fd9', '#d395d0', '#d395b8', '#d395a6', '#d39595']


fig, ax = plt.subplots(1, 2,figsize=(20,15))



ax[0].bar(ages,[p[i] for i in [0,20,25,30,35,40,45,50,55,60,65,70]], color = colors)
ax[1].pie([p[i] for i in [0,20,25,30,35,40,45,50,55,60,65,70]], labels = ages, autopct='%.1f%%', startangle=260, counterclock=False, explode=explode, shadow=True, colors=colors) #textprops={'fontsize': 10}

plt.rcParams.update({'font.size': 20})

ax[0].tick_params(labelrotation=45)
ax[0].set_title('v = 1',fontweight="bold", size=20)

plt.show()



"""
<h1><span style="background-color:yellow;">--------------------------------12-23 이후------------------------------- </span></h1>
"""

#act
#cus
#iem
#trd_kr
#trd_oss

act.columns = ['계좌번호', '고객번호', '계좌개설월']
cus.columns = ['고객번호', '성별', '연령대', '주소(시도)', '고객등급', '고객투자성향']
iem.columns = ['종목코드', '종목영문명', '종목한글명']
trd_kr.columns = ['계좌번호','주문날짜','주문순서','주문접수시간대','최종체결시간대','종목코드','매매구분코드','체결수량','체결가격','주문매체구분코드']
trd_oss.columns = ['계좌번호','주문날짜','주문순서','주문접수시간대','최종체결시간대','종목코드','매매구분코드','체결수량','체결가격','주문매체구분코드','거래통화코드','거래통화환율']

yz20 = cus['연령대'] == 20
yz25 = cus['연령대'] == 25
yz30 = cus['연령대'] == 30
yz35 = cus['연령대'] == 35

cus_yz = cus.loc[cus['연령대'].index[yz20 | yz25 | yz30 | yz35]]
cus_y = cus.loc[cus['연령대'].index[yz20 | yz25]]
cus_z = cus.loc[cus['연령대'].index[yz30 | yz35]]

import numpy as np

np.array(cus['고객등급']).count([9,'-'])



trd_kr

trd_oss



sex_counts_yz = cus_yz['성별'].value_counts()

explode = [0.05, 0.05]
#colors = ['#ff9999', '#ffc000', '#8fd9b6', '#d395d0']
colors = ['#ffc000', '#ff9999']


fig, ax = plt.subplots(1,2,figsize=(20,15))


ax[0].bar(['male', 'female'],[sex_counts_yz[1], sex_counts_yz[2]], color = colors)
ax[1].pie([sex_counts_yz[1], sex_counts_yz[2]], labels=['male', 'female'], autopct='%.1f%%', startangle=260, counterclock=False, explode=explode, shadow=True, colors=colors) #textprops={'fontsize': 25}

ax[0].set_title('XY gender ratio bar chart')
ax[1].set_title('XY gender ratio pie chart')

#plt.scatter(['male', 'female'], [sex_counts[1], sex_counts[2]], marker= 'o', s=400, color= 'red', alpha=0.5)
plt.rcParams.update({'font.size': 20})

plt.show()









# result = pd.merge(trd_kr, trd_oss, on = '계좌번호')

ages = cus['연령대'].value_counts()
ages.sort_index(inplace=True)

ages = cus['연령대'].value_counts()
ages.sort_index(inplace=True)

X = ages[40] + ages[45] + ages[50] + ages[55] + ages[60] + ages[65] + ages[70]
Y = ages[25] + ages[30] + ages[35]
Z = ages[0] + ages[20]

explode = [0.05, 0.05, 0.05]
#colors = ['#ff9999', '#ffc000', '#8fd9b6', '#d395d0']
ages_range = ['X', 'Y', 'Z']
colors = ['#a5d98f', '#8fd9b6', '#8fd9cf', '#8fc7d9', '#8fa0d9', '#a28fd9', '#b98fd9', '#c78fd9', '#d395d0', '#d395b8', '#d395a6', '#d39595']


fig, ax = plt.subplots(1, 2,figsize=(20,15))



ax[0].bar(ages_range,[X, Y, Z], color = colors)
ax[1].pie([X, Y, Z], labels = ages_range, autopct='%.1f%%', startangle=260, counterclock=False, explode=explode, shadow=True, colors=colors) #textprops={'fontsize': 10}

plt.rcParams.update({'font.size': 20})

ax[0].tick_params(labelrotation=0)
ax[0].set_title('X, Y, Z',fontweight="bold", size=20)

plt.show()

ages

"""Q. 가장 거래량이 많은 종목은?
Q. 삼성전자의 거래량은?
Q. 주문접수 시간대 - 체결 시간대
Q. 등급별 / 투자성향 별 거래량


"""

Y / Z 주문매체 구분코드

"""!! 1) act에서 계좌번호 - 고객번호 2)cus에서 고객번호 - 연령대 3) 연령대를 trd_oss에 갖다붙이기

계좌 개설월 - 첫 거래
-> 관심도 분석

성별
"""



act

cus

act_tmp = act.iloc[:,0:2]
cus_tmp = cus.iloc[:,0:3]

act_tmp

cus_tmp

result = pd.merge(act_tmp, cus_tmp, on = '고객번호', how='right')

result

trd_oss

mydata = pd.merge(result, trd_oss, on = '계좌번호', how='right')

mydata

'''X = ages[40] + ages[45] + ages[50] + ages[55] + ages[60] + ages[65] + ages[70]
Y = ages[25] + ages[30] + ages[35]
Z = ages[0] + ages[20]'''

mydata['세대'] = ['Y' if else( 'Z' if else 'X') for i in range(len(mydata)) ]

mydata[mydata['매매구분코드']==1]

